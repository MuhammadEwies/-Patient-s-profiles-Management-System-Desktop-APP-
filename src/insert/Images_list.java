package insert;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;


public class Images_list extends javax.swing.JFrame  implements ActionListener {
    private ImageIcon insertbackground = new ImageIcon(getClass().getResource("table.jpg"));
    private JLabel labelback = new JLabel();
    ////////////////////////////////////////////////
    ///////////////////////////////////////////////
    private DefaultListModel model = new  DefaultListModel();
   
    /**
     * Creates new form Images_list
     */
    
    
    private String id ; 
   /*public Images_list() {
    initComponents();
    }*/
    public Images_list() {
        initComponents();
        this.setVisible(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setSize(700, 650);
        this.setResizable(false);
        this.jPanel1.setSize(this.getWidth(),this.getHeight());
        
        //////////////////////////////////////////////////////
        labelback.setIcon(insertbackground);
        labelback.setSize(this.getWidth(),this.getHeight());
        jPanel1.add(this.labelback);
       ////////////////////////////////////////////////////////
       this.Ok.addActionListener(this);
       this.Open_image.addActionListener(this);
       this.Add_new_image.addActionListener(this);
       this.Delete_selected.addActionListener(this);
     ////////////////////////////////////////////////////////
       jList1.setModel(model);
    // this.id = id ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        Ok = new javax.swing.JButton();
        Add_new_image = new javax.swing.JButton();
        Open_image = new javax.swing.JButton();
        Delete_selected = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jLabel1.setText("Patient Images");

        jList1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Examble.img" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        Ok.setBackground(new java.awt.Color(24, 0, 84));
        Ok.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Ok.setForeground(new java.awt.Color(255, 255, 255));
        Ok.setText("Ok");
        Ok.setBorder(null);
        Ok.setFocusPainted(false);
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        Add_new_image.setBackground(new java.awt.Color(24, 0, 84));
        Add_new_image.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Add_new_image.setForeground(new java.awt.Color(255, 255, 255));
        Add_new_image.setText("Add New Image");
        Add_new_image.setBorder(null);
        Add_new_image.setFocusPainted(false);
        Add_new_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_new_imageActionPerformed(evt);
            }
        });

        Open_image.setBackground(new java.awt.Color(24, 0, 84));
        Open_image.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Open_image.setForeground(new java.awt.Color(255, 255, 255));
        Open_image.setText("Open Selected Item");
        Open_image.setBorder(null);
        Open_image.setFocusPainted(false);
        Open_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_imageActionPerformed(evt);
            }
        });

        Delete_selected.setBackground(new java.awt.Color(24, 0, 84));
        Delete_selected.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Delete_selected.setForeground(new java.awt.Color(255, 255, 255));
        Delete_selected.setText("Delete Selected Item");
        Delete_selected.setBorder(null);
        Delete_selected.setFocusPainted(false);
        Delete_selected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_selectedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(316, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Add_new_image, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Delete_selected, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Open_image, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_new_image, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delete_selected, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Open_image, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OkActionPerformed

    private void Add_new_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_new_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_new_imageActionPerformed

    private void Open_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Open_imageActionPerformed

    private void Delete_selectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_selectedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_selectedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Images_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Images_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Images_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Images_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Images_list().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_new_image;
    private javax.swing.JButton Delete_selected;
    private javax.swing.JButton Ok;
    private javax.swing.JButton Open_image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       if(e.getSource() == Add_new_image)
    {
            JFileChooser  images = new JFileChooser();
            int selected_item = images.showSaveDialog(null);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg","gif","png");
            images.addChoosableFileFilter(filter);
            if((selected_item!=JFileChooser.CANCEL_OPTION)&&(selected_item == JFileChooser.APPROVE_OPTION))
            {
             File selectedFile = images.getSelectedFile();
             String path = selectedFile.getAbsolutePath();
             model.addElement(path);
             
            }

    }   
    else if (e.getSource()==Ok)
    {
        this.setVisible(false);
 
        
    }
    else if((e.getSource()==Open_image)&&(jList1.getSelectedIndex()!=-1))
    {
     int index = jList1.getSelectedIndex();
     String path = model.getElementAt(index).toString();  
           try {
               open_image mr = new open_image(path);
           } catch (IOException ex) {
               Logger.getLogger(Images_list.class.getName()).log(Level.SEVERE, null, ex);
           }
           
    }
    else if ((e.getSource()==this.Delete_selected)&&(jList1.getSelectedIndex()!=-1))
    {
        int index = jList1.getSelectedIndex();
        model.remove(index);
    }       
   
    
}
  public ArrayList<String> get_images()
  {
      ArrayList<String> images_path = new ArrayList<String>();
      for(int i =0 ; i<model.size();i++)
      {
          images_path.add( model.get(i).toString());
      }
      return images_path;
  }
}
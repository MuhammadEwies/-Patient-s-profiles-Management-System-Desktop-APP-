
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package insert;

import static insert.mainclass.connect_and_excute;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mohamed
 */
public class update_images extends javax.swing.JFrame implements ActionListener {
  private ImageIcon labelback = new ImageIcon(this.getClass().getResource("table.jpg"));
  private JLabel background = new JLabel();
  private DefaultListModel model1 = new DefaultListModel();
  private DefaultListModel model2 = new DefaultListModel();
  private String id;
  private ArrayList<String> data = new ArrayList<String>(); 
  
  /////////////////////////////////////////////////////
      public update_images(){
        initComponents();
      }

  ////////////////////////////////////////////////////
    public update_images(String id ) throws SQLException {
        initComponents();
        this.setResizable(false);
        this.id = id ;
        ///////////////////////////////////////////////////
        //////////////////////////////////////////////////
        background.setIcon(labelback);
        background.setSize(this.getWidth(),this.getHeight());
        jPanel1.add(this.background);
        ////////////////////////////////////////////////
        ///////////////////////////////////////////////
        this.Ok.addActionListener(this);
        this.Open_selected_item_new.addActionListener(this);
        this.Open_selected_item_last.addActionListener(this);
        this.Delete_from_list.addActionListener(this);
        this.Add_new_image.addActionListener(this);
        /////////////////////////////////////////////
        ////////////////////////////////////////////
        jList1.setModel(model1);
        jList2.setModel(model2);
        ///////////////////////////////////////////
        //////////////////////////////////////////
        data = connect_and_excute.get_images(id);
        for(int i = 0 ; i<data.size();i++)
        {
            model1.addElement(data.get(i));
        }
        /////////////////////////////////////////
        /////////////////////////////////////////
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        Add_new_image = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        Open_selected_item_last = new javax.swing.JButton();
        Delete_from_list = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Open_selected_item_new = new javax.swing.JButton();
        Ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jLabel1.setText("Patient Images");

        jList1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(jList1);

        Add_new_image.setBackground(new java.awt.Color(24, 0, 84));
        Add_new_image.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Add_new_image.setForeground(new java.awt.Color(255, 255, 255));
        Add_new_image.setText("Add New Image");
        Add_new_image.setBorder(null);
        Add_new_image.setFocusPainted(false);
        Add_new_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_new_imageActionPerformed(evt);
            }
        });

        jList2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(jList2);

        Open_selected_item_last.setBackground(new java.awt.Color(24, 0, 84));
        Open_selected_item_last.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Open_selected_item_last.setForeground(new java.awt.Color(255, 255, 255));
        Open_selected_item_last.setText("Open Selected Item");
        Open_selected_item_last.setBorder(null);
        Open_selected_item_last.setFocusPainted(false);
        Open_selected_item_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_selected_item_lastActionPerformed(evt);
            }
        });

        Delete_from_list.setBackground(new java.awt.Color(24, 0, 84));
        Delete_from_list.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Delete_from_list.setForeground(new java.awt.Color(255, 255, 255));
        Delete_from_list.setText("Delete selected Item");
        Delete_from_list.setBorder(null);
        Delete_from_list.setFocusPainted(false);
        Delete_from_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_from_listActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jLabel2.setText("Old images");

        jLabel3.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jLabel3.setText("New Images");

        Open_selected_item_new.setBackground(new java.awt.Color(24, 0, 84));
        Open_selected_item_new.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Open_selected_item_new.setForeground(new java.awt.Color(255, 255, 255));
        Open_selected_item_new.setText("Open Selected Item");
        Open_selected_item_new.setBorder(null);
        Open_selected_item_new.setFocusPainted(false);
        Open_selected_item_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_selected_item_newActionPerformed(evt);
            }
        });

        Ok.setBackground(new java.awt.Color(24, 0, 84));
        Ok.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        Ok.setForeground(new java.awt.Color(255, 255, 255));
        Ok.setText("Ok");
        Ok.setBorder(null);
        Ok.setFocusPainted(false);
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Add_new_image, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(Open_selected_item_last, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(220, 220, 220)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(155, 155, 155)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Delete_from_list, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(Open_selected_item_new, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addComponent(jScrollPane2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(468, 468, 468)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(395, 395, 395)
                        .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Delete_from_list, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Open_selected_item_new, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Open_selected_item_last, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Add_new_image, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OkActionPerformed

    private void Add_new_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_new_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_new_imageActionPerformed

    private void Open_selected_item_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_selected_item_newActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Open_selected_item_newActionPerformed

    private void Open_selected_item_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_selected_item_lastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Open_selected_item_lastActionPerformed

    private void Delete_from_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_from_listActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_from_listActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(update_images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(update_images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(update_images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(update_images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form  */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new update_images().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_new_image;
    private javax.swing.JButton Delete_from_list;
    private javax.swing.JButton Ok;
    private javax.swing.JButton Open_selected_item_last;
    private javax.swing.JButton Open_selected_item_new;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
if(e.getSource()==Ok)
{
    this.setVisible(false);
    
    
}
else if((e.getSource()==Open_selected_item_last )&& (jList1.getSelectedIndex()!=-1))
{
    try {
        int index = jList1.getSelectedIndex();
        String path = (String)model1.getElementAt(index);
        //System.out.println("the path is "+ path);
        
        
        
        open_image mr = new open_image(path);
    } catch (IOException ex) {
        Logger.getLogger(update_images.class.getName()).log(Level.SEVERE, null, ex);
    }
          

}
   if(e.getSource() == Add_new_image)
    {
            JFileChooser  images = new JFileChooser();
            int selected_item = images.showSaveDialog(null);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg","gif","png");
            images.addChoosableFileFilter(filter);
            if((selected_item!=JFileChooser.CANCEL_OPTION)&&(selected_item == JFileChooser.APPROVE_OPTION))
            {
             File selectedFile = images.getSelectedFile();
             String path = selectedFile.getAbsolutePath();
             model2.addElement(path);
          
            }

    }   
else if((e.getSource()==Open_selected_item_new )&& (jList2.getSelectedIndex()!=-1))
{
    String path = jList2.getSelectedValue();
    try {
        open_image imo = new open_image(path);
    } catch (IOException ex) {
        Logger.getLogger(update_images.class.getName()).log(Level.SEVERE, null, ex);
    }
}
else if ((e.getSource()==this.Delete_from_list)&&(jList2.getSelectedIndex()!=-1))
    {
        int index = jList2.getSelectedIndex();
        model2.remove(index);
    }       
   
    }
     public ArrayList<String> model2 ()
   {
       ArrayList<String> new_images = new ArrayList<String>();
       for(int i =0;i<model2.size();i++)
       {
        new_images.add(model2.get(i).toString());
       }
       return new_images;
   }
}
